// Generated by view binder compiler. Do not edit!
package com.example.xr_phone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.xr_phone.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInGameBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton abort;

  @NonNull
  public final ImageButton arrowbtn1;

  @NonNull
  public final ImageView imageStatue;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView labelDistanceExp;

  @NonNull
  public final TextView labelDistancePk;

  @NonNull
  public final TextView labelExposition;

  @NonNull
  public final TextView labelGameplay;

  @NonNull
  public final TextView labelPawn;

  @NonNull
  public final TextView labelPlayerName;

  @NonNull
  public final TextView labelVitesse;

  @NonNull
  public final TextView lablelTeam;

  @NonNull
  public final ImageButton lockmvt;

  @NonNull
  public final TableRow moreObtionPlayer;

  @NonNull
  public final LinearLayout primaryLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ImageButton resetplayer;

  @NonNull
  public final ImageButton returntoParking;

  @NonNull
  public final Spinner spinnerAdvertising;

  @NonNull
  public final Spinner spinnerSurfaceCondition;

  @NonNull
  public final Spinner spinnerTimeofDay;

  @NonNull
  public final Spinner spinnerWeather;

  @NonNull
  public final Button stopGame;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  private ActivityInGameBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton abort,
      @NonNull ImageButton arrowbtn1, @NonNull ImageView imageStatue, @NonNull ImageView imageView3,
      @NonNull TextView labelDistanceExp, @NonNull TextView labelDistancePk,
      @NonNull TextView labelExposition, @NonNull TextView labelGameplay,
      @NonNull TextView labelPawn, @NonNull TextView labelPlayerName,
      @NonNull TextView labelVitesse, @NonNull TextView lablelTeam, @NonNull ImageButton lockmvt,
      @NonNull TableRow moreObtionPlayer, @NonNull LinearLayout primaryLayout,
      @NonNull ProgressBar progressBar, @NonNull ImageButton resetplayer,
      @NonNull ImageButton returntoParking, @NonNull Spinner spinnerAdvertising,
      @NonNull Spinner spinnerSurfaceCondition, @NonNull Spinner spinnerTimeofDay,
      @NonNull Spinner spinnerWeather, @NonNull Button stopGame, @NonNull TextView textView,
      @NonNull TextView textView2, @NonNull TextView textView3, @NonNull TextView textView4) {
    this.rootView = rootView;
    this.abort = abort;
    this.arrowbtn1 = arrowbtn1;
    this.imageStatue = imageStatue;
    this.imageView3 = imageView3;
    this.labelDistanceExp = labelDistanceExp;
    this.labelDistancePk = labelDistancePk;
    this.labelExposition = labelExposition;
    this.labelGameplay = labelGameplay;
    this.labelPawn = labelPawn;
    this.labelPlayerName = labelPlayerName;
    this.labelVitesse = labelVitesse;
    this.lablelTeam = lablelTeam;
    this.lockmvt = lockmvt;
    this.moreObtionPlayer = moreObtionPlayer;
    this.primaryLayout = primaryLayout;
    this.progressBar = progressBar;
    this.resetplayer = resetplayer;
    this.returntoParking = returntoParking;
    this.spinnerAdvertising = spinnerAdvertising;
    this.spinnerSurfaceCondition = spinnerSurfaceCondition;
    this.spinnerTimeofDay = spinnerTimeofDay;
    this.spinnerWeather = spinnerWeather;
    this.stopGame = stopGame;
    this.textView = textView;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_in_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.abort;
      ImageButton abort = ViewBindings.findChildViewById(rootView, id);
      if (abort == null) {
        break missingId;
      }

      id = R.id.arrowbtn1;
      ImageButton arrowbtn1 = ViewBindings.findChildViewById(rootView, id);
      if (arrowbtn1 == null) {
        break missingId;
      }

      id = R.id.imageStatue;
      ImageView imageStatue = ViewBindings.findChildViewById(rootView, id);
      if (imageStatue == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.labelDistanceExp;
      TextView labelDistanceExp = ViewBindings.findChildViewById(rootView, id);
      if (labelDistanceExp == null) {
        break missingId;
      }

      id = R.id.labelDistancePk;
      TextView labelDistancePk = ViewBindings.findChildViewById(rootView, id);
      if (labelDistancePk == null) {
        break missingId;
      }

      id = R.id.labelExposition;
      TextView labelExposition = ViewBindings.findChildViewById(rootView, id);
      if (labelExposition == null) {
        break missingId;
      }

      id = R.id.labelGameplay;
      TextView labelGameplay = ViewBindings.findChildViewById(rootView, id);
      if (labelGameplay == null) {
        break missingId;
      }

      id = R.id.labelPawn;
      TextView labelPawn = ViewBindings.findChildViewById(rootView, id);
      if (labelPawn == null) {
        break missingId;
      }

      id = R.id.labelPlayerName;
      TextView labelPlayerName = ViewBindings.findChildViewById(rootView, id);
      if (labelPlayerName == null) {
        break missingId;
      }

      id = R.id.labelVitesse;
      TextView labelVitesse = ViewBindings.findChildViewById(rootView, id);
      if (labelVitesse == null) {
        break missingId;
      }

      id = R.id.lablelTeam;
      TextView lablelTeam = ViewBindings.findChildViewById(rootView, id);
      if (lablelTeam == null) {
        break missingId;
      }

      id = R.id.lockmvt;
      ImageButton lockmvt = ViewBindings.findChildViewById(rootView, id);
      if (lockmvt == null) {
        break missingId;
      }

      id = R.id.more_obtion_player;
      TableRow moreObtionPlayer = ViewBindings.findChildViewById(rootView, id);
      if (moreObtionPlayer == null) {
        break missingId;
      }

      id = R.id.primary_layout;
      LinearLayout primaryLayout = ViewBindings.findChildViewById(rootView, id);
      if (primaryLayout == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.resetplayer;
      ImageButton resetplayer = ViewBindings.findChildViewById(rootView, id);
      if (resetplayer == null) {
        break missingId;
      }

      id = R.id.returntoParking;
      ImageButton returntoParking = ViewBindings.findChildViewById(rootView, id);
      if (returntoParking == null) {
        break missingId;
      }

      id = R.id.spinnerAdvertising;
      Spinner spinnerAdvertising = ViewBindings.findChildViewById(rootView, id);
      if (spinnerAdvertising == null) {
        break missingId;
      }

      id = R.id.spinnerSurfaceCondition;
      Spinner spinnerSurfaceCondition = ViewBindings.findChildViewById(rootView, id);
      if (spinnerSurfaceCondition == null) {
        break missingId;
      }

      id = R.id.spinnerTimeofDay;
      Spinner spinnerTimeofDay = ViewBindings.findChildViewById(rootView, id);
      if (spinnerTimeofDay == null) {
        break missingId;
      }

      id = R.id.spinnerWeather;
      Spinner spinnerWeather = ViewBindings.findChildViewById(rootView, id);
      if (spinnerWeather == null) {
        break missingId;
      }

      id = R.id.stopGame;
      Button stopGame = ViewBindings.findChildViewById(rootView, id);
      if (stopGame == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new ActivityInGameBinding((ConstraintLayout) rootView, abort, arrowbtn1, imageStatue,
          imageView3, labelDistanceExp, labelDistancePk, labelExposition, labelGameplay, labelPawn,
          labelPlayerName, labelVitesse, lablelTeam, lockmvt, moreObtionPlayer, primaryLayout,
          progressBar, resetplayer, returntoParking, spinnerAdvertising, spinnerSurfaceCondition,
          spinnerTimeofDay, spinnerWeather, stopGame, textView, textView2, textView3, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
